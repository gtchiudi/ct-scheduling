services:
  # backend-dev:
  #   build:
  #     context: .
  #   container_name: backend_c_dev
  #   command: python manage.py runserver 0.0.0.0:8000
  #   ports:
  #     - "8000:8000"
  #   volumes:
  #     - ./backend:/app
  # deploy:
  #   build:
  #     context: .
  #   ports:
  #     - "8000:8000"

  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    container_name: django_backend
    command: sleep infinity
    # command: python manage.py runserver 0.0.0.0:8000
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/ct-scheduling/backend
      - ./backend/static:/ct-scheduling/static

  # frontend-dev:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.node
  #     target: development
  #   container_name: frontend_c_dev
  #   command: npm run dev -- --host
  #   ports:
  #     - 3004:5173
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #   depends_on: 
  #     - backend-dev
  #   stdin_open: true
  #   tty: true
  
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    container_name: react_frontend
    command: npm run dev -- --host
    restart: always
    ports: 
      - 3000:5173
    volumes:
      - backend_static:/app/static
      - ./frontend:/app
    depends_on:
      - backend

  mysql:
    image: mysql:8.0
    container_name: mysql_db
    restart: always
    env_file:
      - .env
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

volumes:
  backend_static:
  mysql_data: